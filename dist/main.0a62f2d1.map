{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA;AACA,IAAIC,QAAMF,SAASC,aAAT,CAAuB,QAAvB,CAAV;;AAEA,IAAIE,2rDAAJ;AA+DA,IAAIC,UAAQ,EAAZ;AACA;;AAEA;AACA;;AAEA,IAAIC,IAAE,CAAN;;AAEA,IAAIC,OAAK,SAALA,IAAK,GAAI;AACTC,eAAW,YAAM;AACb;AACA,YAAGJ,OAAOE,CAAP,MAAY,IAAf,EAAoB;AAChBD,uBAAS,MAAT;AACA;AACH,SAHD,MAIK,IAAGD,OAAOE,CAAP,MAAY,GAAf,EAAmB;AACpBD,uBAAS,QAAT;AACA;AACH;AACD;AAJK,aAKD;AACAA,2BAASD,OAAOE,CAAP,CAAT;AACH;;AAED;AACA;AACAN,aAAKS,SAAL,GAAiBJ,OAAjB;AACAF,cAAMM,SAAN,GAAiBL,OAAOM,SAAP,CAAiB,CAAjB,EAAmBJ,CAAnB,CAAjB;AACAK,eAAOC,QAAP,CAAgB,CAAhB,EAAkB,OAAlB;AACAZ,aAAKY,QAAL,CAAc,CAAd,EAAgB,MAAhB;AACA;AACAN;;AAEA,YAAGA,IAAEF,OAAOS,MAAZ,EAAmB;AACfN;AACH;AAEJ,KA5BD,EA4BE,CA5BF;AA6BH,CA9BD;AA+BA;;AAEAA","file":"main.0a62f2d1.map","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector(\"#html\");\r\n// 用css选择器找到\"#html\"\r\nlet style=document.querySelector('#style');\r\n\r\nlet string=`/*你好，我叫青游\r\n *接下来，我要演示一下我的前端功底\r\n *首先，我要准备一个div\r\n **/\r\n #div1 {\r\n    border:1px solid red;\r\n    width:200px; \r\n    height:200px;\r\n\r\n}\r\n/*接下来，把div变成变成一张太极八卦图\r\n *注意看好喽！！\r\n *首先，把div变成圆\r\n**/\r\n#div1{\r\n    position:relative;\r\n    border-radius:50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    border:none;\r\n}\r\n/*八卦是一阴一阳\r\n *先画阴阳鱼\r\n **/\r\n#div1{\r\n    \r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::before{\r\n    display:block;\r\n    position:absolute;\r\n    content:'';\r\n    \r\n    width:100px;\r\n    height:100px;\r\n    left:50%;\r\n    transform: translateX(-50%);\r\n    border-radius:50%;\r\n    background:black;\r\n}\r\n#div1::after{\r\n    display:block;\r\n    position:absolute;\r\n    content:'';\r\n    \r\n    width:100px;\r\n    height:100px;\r\n    left:50%;\r\n    transform: translateX(-50%);\r\n    border-radius:50%;\r\n    background:white;\r\n    bottom:0;\r\n}\r\n/*而阴中有阳，阳中有阴\r\n *故再添阴阳眼\r\n **/\r\n #div1::before{\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 20%, rgba(0,0,0,1) 20%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 20%, rgba(255,255,255,1) 20%, rgba(255,255,255,1) 100%);\r\n}\r\n\r\n`;\r\nlet string2='';\r\n//string用来保存实际作用的代码和注释字符串，string2用来保存 转义之后给用户看的代码和注释字符串\r\n\r\n// string=string.replace(/\\n/g,'<br>')\r\n//replace方法只会把第一个回车换成html里的换行，想全部替换，需要正则表达式；可是用replace方法还是会把<br>字符识别进来：末尾显示一个 < 又立马消失再换行\r\n\r\nlet n=0;\r\n\r\nlet step=()=>{\r\n    setTimeout(() => {\r\n        //遇到换行，string2就添加换行字符\r\n        if(string[n]==='\\n'){\r\n            string2+='<br>';\r\n            //<br>会成为string2的字符子串，显然，string2的长度大于string\r\n        }\r\n        else if(string[n]===' '){\r\n            string2+='&nbsp;';\r\n            //同理，空格也要转义成html能识别的空格：&nbsp;\r\n        }\r\n        //没有换行字符，string2就原样保存string\r\n        else{\r\n            string2+=string[n];\r\n        }\r\n        \r\n        // console.log(string2.substring(0,n))\r\n        //substring方法里的n表示第n个字符，从1开始\r\n        html.innerHTML = string2;\r\n        style.innerHTML= string.substring(0,n);\r\n        window.scrollTo(0,9999999);\r\n        html.scrollTo(0,999999);\r\n        //直接在html里打印string2，而不是string2.substring(0,n)\r\n        n++;\r\n        \r\n        if(n<string.length){\r\n            step();\r\n        }\r\n        \r\n    },5);\r\n}\r\n//setTimeout()只响应一次，setInterval()可以一直响应，一般用setTimeout()递归来多次响应\r\n\r\nstep();\r\n"]}